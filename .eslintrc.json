{
  "env": {
    "node": true,
    "es2021": true
  },
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "import"],
  "root": true,
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "overrides": [],
  "parserOptions": {
    "ecmaVersion": "latest"
  },
  "rules": {
    "import/order": [
      1,
      {
        "groups": ["external", "builtin", "internal", "sibling", "parent", "index"]
      }
    ],
    "comma-dangle": [1, "always-multiline"],
    "func-names": 0,
    "no-param-reassign": 0,
    "space-before-function-paren": 0,
    "space-before-blocks": 0,
    "camelcase": "error",
    "semi": 1,
    "max-len": [1],
    "no-else-return": 1,
    "no-underscore-dangle": ["off"],
    "guard-for-in": 1,
    "no-restricted-syntax": 1,
    "no-shadow": 1,
    "spaced-comment": 1,
    "padded-blocks": 1,
    "no-multiple-empty-lines": "error",
    "no-trailing-spaces": "error",
    "no-multi-spaces": "error",
    "space-in-parens": "error",
    "no-regex-spaces": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-irregular-whitespace": "error",
    "no-whitespace-before-property": "error",
    "no-unused-labels": "error",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "MemberExpression": 1,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        },
        "CallExpression": {
          "arguments": 1
        },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "offsetTernaryExpressions": true
      }
    ],
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "multiline-ternary": ["error", "always-multiline"]
  }
}
